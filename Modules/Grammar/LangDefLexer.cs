//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from LangDef.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace projeto_compiler {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public partial class LangDefLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, OPEN_PARENTHESIS=5, CLOSE_PARENTHESIS=6, 
		SEMI_COLON=7, OPERATOR=8, ATTR=9, ID=10, NUMBER=11, WHITE_SPACE=12;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "OPEN_PARENTHESIS", "CLOSE_PARENTHESIS", 
		"SEMI_COLON", "OPERATOR", "ATTR", "ID", "NUMBER", "WHITE_SPACE"
	};


	public LangDefLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public LangDefLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'program'", "'endprog'", "'read'", "'write'", "'('", "')'", "';'", 
		null, "'='"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, "OPEN_PARENTHESIS", "CLOSE_PARENTHESIS", 
		"SEMI_COLON", "OPERATOR", "ATTR", "ID", "NUMBER", "WHITE_SPACE"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "LangDef.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static LangDefLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,12,88,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,
		2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,1,0,1,0,1,0,1,0,1,0,1,0,1,
		0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,
		1,3,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,3,9,64,8,9,1,9,
		5,9,67,8,9,10,9,12,9,70,9,9,1,10,4,10,73,8,10,11,10,12,10,74,1,10,1,10,
		4,10,79,8,10,11,10,12,10,80,3,10,83,8,10,1,11,1,11,1,11,1,11,0,0,12,1,
		1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,1,0,5,3,0,42,43,
		45,45,47,47,2,0,65,90,97,122,3,0,48,57,65,90,97,122,1,0,48,57,3,0,9,10,
		13,13,32,32,91,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,
		0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,
		21,1,0,0,0,0,23,1,0,0,0,1,25,1,0,0,0,3,33,1,0,0,0,5,41,1,0,0,0,7,46,1,
		0,0,0,9,52,1,0,0,0,11,54,1,0,0,0,13,56,1,0,0,0,15,58,1,0,0,0,17,60,1,0,
		0,0,19,63,1,0,0,0,21,72,1,0,0,0,23,84,1,0,0,0,25,26,5,112,0,0,26,27,5,
		114,0,0,27,28,5,111,0,0,28,29,5,103,0,0,29,30,5,114,0,0,30,31,5,97,0,0,
		31,32,5,109,0,0,32,2,1,0,0,0,33,34,5,101,0,0,34,35,5,110,0,0,35,36,5,100,
		0,0,36,37,5,112,0,0,37,38,5,114,0,0,38,39,5,111,0,0,39,40,5,103,0,0,40,
		4,1,0,0,0,41,42,5,114,0,0,42,43,5,101,0,0,43,44,5,97,0,0,44,45,5,100,0,
		0,45,6,1,0,0,0,46,47,5,119,0,0,47,48,5,114,0,0,48,49,5,105,0,0,49,50,5,
		116,0,0,50,51,5,101,0,0,51,8,1,0,0,0,52,53,5,40,0,0,53,10,1,0,0,0,54,55,
		5,41,0,0,55,12,1,0,0,0,56,57,5,59,0,0,57,14,1,0,0,0,58,59,7,0,0,0,59,16,
		1,0,0,0,60,61,5,61,0,0,61,18,1,0,0,0,62,64,7,1,0,0,63,62,1,0,0,0,64,68,
		1,0,0,0,65,67,7,2,0,0,66,65,1,0,0,0,67,70,1,0,0,0,68,66,1,0,0,0,68,69,
		1,0,0,0,69,20,1,0,0,0,70,68,1,0,0,0,71,73,7,3,0,0,72,71,1,0,0,0,73,74,
		1,0,0,0,74,72,1,0,0,0,74,75,1,0,0,0,75,82,1,0,0,0,76,78,5,46,0,0,77,79,
		7,3,0,0,78,77,1,0,0,0,79,80,1,0,0,0,80,78,1,0,0,0,80,81,1,0,0,0,81,83,
		1,0,0,0,82,76,1,0,0,0,82,83,1,0,0,0,83,22,1,0,0,0,84,85,7,4,0,0,85,86,
		1,0,0,0,86,87,6,11,0,0,87,24,1,0,0,0,7,0,63,66,68,74,80,82,1,6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace projeto_compiler
